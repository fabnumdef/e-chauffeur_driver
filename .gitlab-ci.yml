stages:
  - test
  - build
  - deploy

include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Management.gitlab-ci.yml

variables:
  DS_DISABLE_DIND: "true"
  KUBECONFIG: /etc/deploy/config

.deploy:
  stage: deploy
  image: dtzar/helm-kubectl:3.1.1
  variables:
    KUBECONFIG: /etc/deploy/config
    K8S_CLUSTER_NAME: current
    ALERT_ENABLED: "true"
    REPLICA_COUNT: 1
    INGRESS_ISSUER: self-signing
    ALERT_MIN_POD: 1
  before_script:
    - mkdir -p `dirname $KUBECONFIG`
    - echo ${STAGING_KUBECONFIG} | base64 -d > $KUBECONFIG
  script:
    - helm upgrade
      --install
      --namespace e-chauffeur
      --set replicaCount=${REPLICA_COUNT}
      --set image.tag="${CI_COMMIT_REF_SLUG}"
      --set ingress.host="${DEPLOYMENT_HOST}"
      --set imageCredentials.username="${DOCKER_REGISTRY_USER}"
      --set imageCredentials.password="${DOCKER_REGISTRY_PASSWORD}"
      --set imageCredentials.registry="${CI_REGISTRY}"
      --set env.API_URL="${API_URL}"
      --set env.VERSION="Version ${CI_COMMIT_REF_NAME} - ${CI_COMMIT_SHA} (job \#${CI_JOB_ID})"
      --set env.VAPID_PUBLIC_KEY="${VAPID_PUBLIC_KEY}"
      --set monitoring.alert.enabled="${ALERT_ENABLED}"
      --set ingress.issuer="${INGRESS_ISSUER}"
      --set monitoring.alert.minimumPod=${ALERT_MIN_POD}
      --wait
      ${HELM_NAME}
      .helm-chart

.node:
  image: node:alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  before_script:
    - npm install

retire-js-dependency_scanning:
  only:
    changes:
      - package-lock.json

gemnasium-dependency_scanning:
  only:
    changes:
      - package-lock.json

license_management:
  only:
    changes:
      - package-lock.json

lint:
  stage: test
  extends: .node
  script:
    - npm run lint

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

deploy_review:
  extends: .deploy
  variables:
    DEPLOYMENT_HOST: ${CI_COMMIT_REF_SLUG}.${STAGING_DOMAIN}
    API_URL: ${STAGING_API_URL}
    ALERT_ENABLED: "false"
    HELM_NAME: driver-${CI_COMMIT_REF_SLUG}
    VAPID_PUBLIC_KEY: ${STAGING_VAPID_PUBLIC_KEY}
  except:
    refs:
      - tags
      - master
      - develop

deploy_staging:
  extends: .deploy
  variables:
    DEPLOYMENT_HOST: ${STAGING_DOMAIN}
    API_URL: ${STAGING_API_URL}
    HELM_NAME: driver-staging
    REPLICA_COUNT: 3
    INGRESS_ISSUER: letsencrypt-prod
    ALERT_MIN_POD: 2
    VAPID_PUBLIC_KEY: ${STAGING_VAPID_PUBLIC_KEY}
  only:
    refs:
      - develop
  except:
    refs:
      - tags

deploy_prod:
  extends: .deploy
  variables:
    DEPLOYMENT_HOST: ${PRODUCTION_DOMAIN}
    API_URL: ${PRODUCTION_API_URL}
    HELM_NAME: driver
    REPLICA_COUNT: 3
    INGRESS_ISSUER: letsencrypt-prod
    ALERT_MIN_POD: 3
    VAPID_PUBLIC_KEY: ${PRODUCTION_VAPID_PUBLIC_KEY}
  only:
    refs:
      - tags
