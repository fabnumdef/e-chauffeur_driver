stages:
  - test
  - build
  - deploy

variables:
  URL_REVIEW: ${CI_COMMIT_REF_SLUG}.${STAGING_DOMAIN}
  KUBECONFIG: /etc/deploy/config

lint:
  image: node:latest
  stage: test
  script:
    - npm i
    - npm run lint

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

deploy_review:
  stage: deploy
  image: dtzar/helm-kubectl:3.0.2
  before_script:
    - mkdir -p `dirname $KUBECONFIG`
    - echo ${STAGING_KUBECONFIG} | base64 -d > $KUBECONFIG
  script:
    - helm upgrade
      --install
      --namespace e-chauffeur
      --set image.tag="${CI_COMMIT_REF_SLUG}"
      --set ingress.host="${URL_REVIEW}"
      --set imageCredentials.username="${DOCKER_REGISTRY_USER}"
      --set imageCredentials.password="${DOCKER_REGISTRY_PASSWORD}"
      --set imageCredentials.registry="${CI_REGISTRY}"
      --set env.API_URL="${STAGING_API_URL}"
      --set env.VAPID_PUBLIC_KEY="${STAGING_VAPID_PUBLIC_KEY}"
      --set monitoring.alert.enabled="false"
      --wait
      driver-${CI_COMMIT_REF_SLUG}
      .helm-chart
  except:
    refs:
      - tags
      - master
      - develop

deploy_staging:
  stage: deploy
  image: dtzar/helm-kubectl:3.0.2
  before_script:
    - mkdir -p `dirname $KUBECONFIG`
    - echo ${STAGING_KUBECONFIG} | base64 -d > $KUBECONFIG
  script:
    - helm upgrade
      --install
      --namespace e-chauffeur
      --set replicaCount=3
      --set image.tag="${CI_COMMIT_REF_SLUG}"
      --set ingress.host="${STAGING_DOMAIN}"
      --set imageCredentials.username="${DOCKER_REGISTRY_USER}"
      --set imageCredentials.password="${DOCKER_REGISTRY_PASSWORD}"
      --set imageCredentials.registry="${CI_REGISTRY}"
      --set env.API_URL="${STAGING_API_URL}"
      --set env.VAPID_PUBLIC_KEY="${STAGING_VAPID_PUBLIC_KEY}"
      --set ingress.issuer="letsencrypt-prod"
      --set monitoring.alert.minimumPod=2
      --wait
      driver-staging
      .helm-chart
  only:
    refs:
      - develop
  except:
    refs:
      - tags

deploy_prod:
  stage: deploy
  image: dtzar/helm-kubectl:3.0.2
  before_script:
    - mkdir -p `dirname $KUBECONFIG`
    - echo ${PRODUCTION_KUBECONFIG} | base64 -d > $KUBECONFIG
  script:
    - helm upgrade
      --install
      --namespace e-chauffeur
      --set replicaCount=3
      --set image.tag="${CI_COMMIT_REF_SLUG}"
      --set ingress.host="${PRODUCTION_DOMAIN}"
      --set imageCredentials.username="${DOCKER_REGISTRY_USER}"
      --set imageCredentials.password="${DOCKER_REGISTRY_PASSWORD}"
      --set imageCredentials.registry="${CI_REGISTRY}"
      --set env.API_URL="${PRODUCTION_API_URL}"
      --set env.VAPID_PUBLIC_KEY="${PRODUCTION_VAPID_PUBLIC_KEY}"
      --set ingress.issuer="letsencrypt-prod"
      --set monitoring.alert.minimumPod=3
      --wait
      driver
      .helm-chart
  only:
    refs:
      - tags
